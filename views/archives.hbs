<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="icon" type="image/x-icon" href="/wordle/favicon.svg">
	<title>{{__ "archives.title"}}</title>
	<link rel="stylesheet" href="/archives/archives.css">
</head>
<body>
	<div class="archives-layout">
		<!-- === SIDEBAR === -->
		<div class="sidebar">
			<div class="sidebar-header">
				<h2>{{__ "archives.header"}}</h2>
				<div class="navigation-buttons">
					<a href="/" class="nav-btn home-btn">üè†</a>
					<a href="/wordle" class="nav-btn play-btn">üéÆ</a>
				</div>
			</div>

			<!-- Liste des dates disponibles -->
			{{#if availableDates.length}}
				<div class="dates-list">
					<h3>{{__ "archives.available_dates"}}</h3>
					<div class="dates-container">
						{{#each availableDates}}
							<a href="#"
							   class="date-item {{#if (eq date ../selectedDate)}}active{{/if}}"
							   data-date="{{date}}"
							   onclick="loadArchiveDate('{{date}}'); return false;">
								<div class="date-display">{{displayDate}}</div>
								<div class="date-short">{{formattedDate}}</div>
							</a>
						{{/each}}
					</div>
				</div>
			{{else}}
				<div class="no-dates">
					<p>{{__ "archives.no_dates"}}</p>
					<a href="/wordle" class="play-now-btn">{{__ "archives.play_now"}}</a>
				</div>
			{{/if}}

			<!-- Top Streaks dans le footer -->
			<div class="sidebar-footer">
				<h3>{{__ "archives.top_streaks"}}</h3>
				<div class="leaderboard-content">
					{{#if topStreaks.length}}
						{{#each topStreaks}}
							<div class="player-row-streaks">
								<span class="rank">{{inc @index 1}}</span>
								<span class="player-name">{{login}}</span>
								<span class="score">üî• {{bestStreak}} {{#if (gt bestStreak 1)}}{{@root.__ "archives.days"}}{{else}}{{@root.__ "archives.day"}}{{/if}}</span>
							</div>
						{{/each}}
					{{else}}
						<div class="no-data">{{__ "archives.no_data"}}</div>
					{{/if}}
				</div>
			</div>
		</div>

		<!-- === CONTENU PRINCIPAL === -->
		<div class="main-content">
			{{#if error}}
				<!-- Gestion des erreurs -->
				<div class="error-message">
					<h2>{{__ "archives.error"}}</h2>
					<p>{{error}}</p>
				</div>

			{{else if selectedArchive}}
				<!-- En-t√™te de l'archive s√©lectionn√©e -->
				<div class="archive-header">
					<div class="archive-title">
						<h1>üìÖ {{selectedArchive.displayDate}}</h1>					<div class="word-reveal">
						<span class="word-label">{{__ "archives.word_of_day"}}</span>
						<span class="word-of-day">{{selectedArchive.wordOfTheDay}}</span>
					</div>

						<!-- Statistiques d√©taill√©es -->
						{{#if selectedArchive.stats.successCount}}
							<div class="detailed-stats">
								<div class="stat-row">								<div class="stat-item success">
									<span class="stat-icon">‚úÖ</span>
									<span class="stat-number">{{selectedArchive.stats.successCount}}</span>
									<span class="stat-desc">{{__ "archives.successes"}}</span>
								</div>
								<div class="stat-item failure">
									<span class="stat-icon">‚ùå</span>
									<span class="stat-number">{{selectedArchive.stats.failureCount}}</span>
									<span class="stat-desc">{{__ "archives.failures"}}</span>
								</div>
									{{#if (gt selectedArchive.stats.successCount 0)}}									<div class="stat-item average">
										<span class="stat-icon">‚è±Ô∏è</span>
										<span class="stat-number">{{selectedArchive.stats.averageTime}}s</span>
										<span class="stat-desc">{{__ "archives.average_time"}}</span>
									</div>
									<div class="stat-item average">
										<span class="stat-icon">üéØ</span>
										<span class="stat-number">{{selectedArchive.stats.averageAttempts}}</span>
										<span class="stat-desc">{{__ "archives.average_attempts"}}</span>
									</div>
									{{/if}}
								</div>
							</div>
						{{/if}}
					</div>

					<!-- Carte du nombre total de joueurs -->
					<div class="archive-stats">					<div class="stat-card">
						<span class="stat-value">{{selectedArchive.totalPlayers}}</span>
						<span class="stat-label">{{#if (gt selectedArchive.totalPlayers 1)}}{{__ "archives.players"}}{{else}}{{__ "archives.player"}}{{/if}}</span>
					</div>
					</div>
				</div>

				<div class="content-grid">
					<!-- === LEADERBOARDS AVEC SCROLL === -->
					<div class="leaderboards-section">					<!-- Classement par temps -->
					<div class="leaderboard fastest">
						<h3>{{__ "archives.fastest_ranking"}} ({{selectedArchive.stats.fastest.length}})</h3>
							<div class="leaderboard-scroll-container">
								<div class="leaderboard-content">
									{{#if selectedArchive.stats.fastest.length}}
										{{#each selectedArchive.stats.fastest}}
											<div class="player-row {{#if (eq attempts 7)}}failed{{/if}}" data-rank="{{inc @index 1}}">
												<span class="rank">{{inc @index 1}}</span>											<span class="player-name">{{login}}</span>
											{{#if (eq attempts 7)}}
												<span class="score failed">{{@root.__ "archives.failed"}} ({{time}}s)</span>
											{{else}}
												<span class="score">‚è±Ô∏è {{time}}s ({{attempts}} {{#if (gt attempts 1)}}{{@root.__ "archives.attempts"}}{{else}}{{@root.__ "archives.attempt"}}{{/if}})</span>
											{{/if}}
											</div>
										{{/each}}
									{{else}}
										<div class="no-data">{{__ "archives.no_data"}}</div>
									{{/if}}
								</div>
							</div>
						</div>

						<!-- Classement par nombre d'essais -->
						<div class="leaderboard fewest">
							<h3>{{__ "archives.attempts_ranking"}} ({{selectedArchive.stats.fewest_attempts.length}})</h3>
							<div class="leaderboard-scroll-container">
								<div class="leaderboard-content">
									{{#if selectedArchive.stats.fewest_attempts.length}}
										{{#each selectedArchive.stats.fewest_attempts}}
											<div class="player-row {{#if (eq attempts 7)}}failed{{/if}}" data-rank="{{inc @index 1}}">
												<span class="rank">{{inc @index 1}}</span>											<span class="player-name">{{login}}</span>
											{{#if (eq attempts 7)}}
												<span class="score failed">{{@root.__ "archives.failed"}} ({{time}}s)</span>
											{{else}}
												<span class="score">üéØ {{attempts}} {{#if (gt attempts 1)}}{{@root.__ "archives.attempts"}}{{else}}{{@root.__ "archives.attempt"}}{{/if}} ({{time}}s)</span>
											{{/if}}
											</div>
										{{/each}}
									{{else}}
										<div class="no-data">{{__ "archives.no_data"}}</div>
									{{/if}}
								</div>
							</div>
						</div>
					</div>

					<!-- === GRILLE DE TOUS LES PARTICIPANTS === -->
					<div class="all-players-section">
						<h3>{{__ "archives.all_participants"}} ({{selectedArchive.totalPlayers}})</h3>
						<div class="players-grid">
							{{#each selectedArchive.stats.allPlayers}}
								<div class="player-card {{#if (eq attempts 7)}}failed{{/if}}">
									<div class="player-info">
										<div class="player-name">{{login}}</div>
										{{#if (eq attempts 7)}}
											<div class="player-result failed">{{@root.__ "archives.failed_after_6"}}</div>
											<div class="player-time">‚è±Ô∏è {{time}}s</div>
										{{else}}
											<div class="player-stats">
												<span class="attempts">üéØ {{attempts}} {{#if (gt attempts 1)}}{{@root.__ "archives.attempts"}}{{else}}{{@root.__ "archives.attempt"}}{{/if}}</span>
												<span class="time">‚è±Ô∏è {{time}}s</span>
											</div>
										{{/if}}
									</div>
								</div>
							{{/each}}
						</div>
					</div>
				</div>

			{{else}}
				<!-- √âtat par d√©faut : aucune archive s√©lectionn√©e -->
				<div class="no-archive-selected">
					<div class="placeholder-content">
						<h2>{{__ "archives.select_date"}}</h2>
						<p>{{__ "archives.select_date_desc"}}</p>
						{{#if availableDates.length}}
							<button onclick="selectFirstDate()" class="select-date-btn">
								{{__ "archives.see_latest"}}
							</button>
						{{/if}}
					</div>
				</div>
			{{/if}}
		</div>
	</div>

	<!-- === BOUTON MOBILE === -->
	<button class="mobile-toggle" onclick="toggleSidebar()">
		<span class="toggle-icon">‚ò∞</span>
	</button>

	<!-- === SCRIPTS === -->
	<script>
		// Translations object for JavaScript usage
		const t = {
			loading: "{{__ "archives.loading"}}",
			error: "{{__ "archives.error"}}",
			loadError: "{{__ "archives.load_error"}}",
			archiveNotFound: "{{__ "archives.archive_not_found"}}",
			archiveUnavailable: "{{__ "archives.archive_unavailable"}}",
			wordOfDay: "{{__ "archives.word_of_day"}}",
			successes: "{{__ "archives.successes"}}",
			failures: "{{__ "archives.failures"}}",
			averageTime: "{{__ "archives.average_time"}}",
			averageAttempts: "{{__ "archives.average_attempts"}}",
			player: "{{__ "archives.player"}}",
			players: "{{__ "archives.players"}}",
			fastestRanking: "{{__ "archives.fastest_ranking"}}",
			attemptsRanking: "{{__ "archives.attempts_ranking"}}",
			allParticipants: "{{__ "archives.all_participants"}}",
			attempt: "{{__ "archives.attempt"}}",
			attempts: "{{__ "archives.attempts"}}",
			failed: "{{__ "archives.failed"}}",
			failedAfter6: "{{__ "archives.failed_after_6"}}",
			noData: "{{__ "archives.no_data"}}"
		};

		// Gestion de l'ouverture/fermeture de la sidebar mobile
		function toggleSidebar() {
			const sidebar = document.querySelector('.sidebar');
			sidebar.classList.toggle('open');
		}

		// Load archive data via AJAX
		function loadArchiveDate(date) {
			// Update active state in sidebar
			document.querySelectorAll('.date-item').forEach(item => {
				item.classList.remove('active');
			});
			document.querySelector(`[data-date="${date}"]`).classList.add('active');

			// Show loading state
			const mainContent = document.querySelector('.main-content');
			mainContent.innerHTML = `
				<div style="display: flex; align-items: center; justify-content: center; min-height: 60vh;">
					<div style="text-align: center; color: #8e9297;">
						<div style="font-size: 2rem; margin-bottom: 1rem;">‚è≥</div>
						<p>${t.loading}</p>
					</div>
				</div>
			`;

			// Fetch new archive data
			fetch(`/api/archives/${date}`)
				.then(response => response.json())
				.then(data => {
					if (data.error) {
						mainContent.innerHTML = `
							<div class="error-message">
								<h2>${t.error}</h2>
								<p>${data.error}</p>
							</div>
						`;
						return;
					}

					// Update main content with new archive data
					updateMainContent(data.selectedArchive, data.selectedDate);
				})
				.catch(error => {
					console.error('Error loading archive:', error);
					mainContent.innerHTML = `
						<div class="error-message">
							<h2>${t.error}</h2>
							<p>${t.loadError}</p>
						</div>
					`;
				});

			// Close sidebar on mobile
			if (window.innerWidth <= 768) {
				setTimeout(() => {
					document.querySelector('.sidebar').classList.remove('open');
				}, 100);
			}
		}

		// Update main content with archive data
		function updateMainContent(archive, selectedDate) {
			const mainContent = document.querySelector('.main-content');
			
			if (!archive) {
				mainContent.innerHTML = `
					<div class="no-archive-selected">
						<div class="placeholder-content">
							<h2>${t.archiveNotFound}</h2>
							<p>${t.archiveUnavailable}</p>
						</div>
					</div>
				`;
				return;
			}

			// Generate HTML for the archive content
			let html = `
				<div class="archive-header">
					<div class="archive-title">
						<h1>üìÖ ${archive.displayDate}</h1>
						<div class="word-reveal">
							<span class="word-label">${t.wordOfDay}</span>
							<span class="word-of-day">${archive.wordOfTheDay}</span>
						</div>
			`;

			// Add detailed stats if available
			if (archive.stats && archive.stats.successCount) {
				html += `
					<div class="detailed-stats">
						<div class="stat-row">
							<div class="stat-item success">
								<span class="stat-icon">‚úÖ</span>
								<span class="stat-number">${archive.stats.successCount}</span>
								<span class="stat-desc">${t.successes}</span>
							</div>
							<div class="stat-item failure">
								<span class="stat-icon">‚ùå</span>
								<span class="stat-number">${archive.stats.failureCount}</span>
								<span class="stat-desc">${t.failures}</span>
							</div>
				`;
				
				if (archive.stats.successCount > 0) {
					html += `
							<div class="stat-item average">
								<span class="stat-icon">‚è±Ô∏è</span>
								<span class="stat-number">${archive.stats.averageTime}s</span>
								<span class="stat-desc">${t.averageTime}</span>
							</div>
							<div class="stat-item average">
								<span class="stat-icon">üéØ</span>
								<span class="stat-number">${archive.stats.averageAttempts}</span>
								<span class="stat-desc">${t.averageAttempts}</span>
							</div>
					`;
				}
				
				html += `
						</div>
					</div>
				`;
			}

			html += `
					</div>
					<div class="archive-stats">
						<div class="stat-card">
							<span class="stat-value">${archive.totalPlayers}</span>
							<span class="stat-label">${archive.totalPlayers > 1 ? t.players : t.player}</span>
						</div>
					</div>
				</div>

				<div class="content-grid">
					<div class="leaderboards-section">
						<div class="leaderboard fastest">
							<h3>${t.fastestRanking} (${archive.stats.fastest.length})</h3>
							<div class="leaderboard-scroll-container">
								<div class="leaderboard-content">
			`;

			// Add fastest players
			if (archive.stats.fastest.length > 0) {
				archive.stats.fastest.forEach((player, index) => {
					const rank = index + 1;
					const failed = player.attempts === 7;
					html += `
						<div class="player-row ${failed ? 'failed' : ''}" data-rank="${rank}">
							<span class="rank">${rank}</span>
							<span class="player-name">${player.login}</span>
							${failed ? 
								`<span class="score failed">${t.failed} (${player.time}s)</span>` :
								`<span class="score">‚è±Ô∏è ${player.time}s (${player.attempts} ${player.attempts > 1 ? t.attempts : t.attempt})</span>`
							}
						</div>
					`;
				});
			} else {
				html += `<div class="no-data">${t.noData}</div>`;
			}

			html += `
								</div>
							</div>
						</div>

						<div class="leaderboard fewest">
							<h3>${t.attemptsRanking} (${archive.stats.fewest_attempts.length})</h3>
							<div class="leaderboard-scroll-container">
								<div class="leaderboard-content">
			`;

			// Add fewest attempts players
			if (archive.stats.fewest_attempts.length > 0) {
				archive.stats.fewest_attempts.forEach((player, index) => {
					const rank = index + 1;
					const failed = player.attempts === 7;
					html += `
						<div class="player-row ${failed ? 'failed' : ''}" data-rank="${rank}">
							<span class="rank">${rank}</span>
							<span class="player-name">${player.login}</span>
							${failed ? 
								`<span class="score failed">${t.failed} (${player.time}s)</span>` :
								`<span class="score">üéØ ${player.attempts} ${player.attempts > 1 ? t.attempts : t.attempt} (${player.time}s)</span>`
							}
						</div>
					`;
				});
			} else {
				html += `<div class="no-data">${t.noData}</div>`;
			}

			html += `
								</div>
							</div>
						</div>
					</div>

					<div class="all-players-section">
						<h3>${t.allParticipants} (${archive.totalPlayers})</h3>
						<div class="players-grid">
			`;

			// Add all players
			if (archive.stats.allPlayers) {
				archive.stats.allPlayers.forEach(player => {
					const failed = player.attempts === 7;
					html += `
						<div class="player-card ${failed ? 'failed' : ''}">
							<div class="player-info">
								<div class="player-name">${player.login}</div>
								${failed ? 
									`<div class="player-result failed">${t.failedAfter6}</div>
									 <div class="player-time">‚è±Ô∏è ${player.time}s</div>` :
									`<div class="player-stats">
										<span class="attempts">üéØ ${player.attempts} ${player.attempts > 1 ? t.attempts : t.attempt}</span>
										<span class="time">‚è±Ô∏è ${player.time}s</span>
									 </div>`
								}
							</div>
						</div>
					`;
				});
			}

			html += `
						</div>
					</div>
				</div>
			`;

			mainContent.innerHTML = html;

			// Re-apply animations
			setTimeout(() => {
				const playerRows = document.querySelectorAll('.player-row');
				playerRows.forEach((row, index) => {
					row.style.animationDelay = `${0.1 + (index * 0.05)}s`;
				});
			}, 50);
		}

		// S√©lection automatique de la premi√®re date
		function selectFirstDate() {
			const firstDateLink = document.querySelector('.date-item');
			if (firstDateLink) {
				const date = firstDateLink.dataset.date;
				loadArchiveDate(date);
			}
		}

		// Fermeture automatique de la sidebar sur mobile apr√®s s√©lection
		document.querySelectorAll('.date-item').forEach(item => {
			item.addEventListener('click', () => {
				if (window.innerWidth <= 768) {
					setTimeout(() => {
						document.querySelector('.sidebar').classList.remove('open');
					}, 100);
				}
			});
		});

		// Fermeture de la sidebar en cliquant √† l'ext√©rieur sur mobile
		document.addEventListener('click', (e) => {
			if (window.innerWidth <= 768) {
				const sidebar = document.querySelector('.sidebar');
				const toggle = document.querySelector('.mobile-toggle');

				if (!sidebar.contains(e.target) && !toggle.contains(e.target)) {
					sidebar.classList.remove('open');
				}
			}
		});

		// Animation progressive des √©l√©ments de leaderboard
		document.addEventListener('DOMContentLoaded', () => {
			// R√©initialiser les animations si la page est recharg√©e
			const playerRows = document.querySelectorAll('.player-row');
			playerRows.forEach((row, index) => {
				row.style.animationDelay = `${0.1 + (index * 0.05)}s`;
			});
		});
	</script>
</body>
</html>
